//https://fritz.com/fileadmin/user_upload/Global/Service/Schnittstellen/AVM_TR-064_first_steps.pdf

#include <WiFi.h>
#include <WiFiMulti.h>
#include <HTTPClient.h>
WiFiMulti WiFiMulti;
#include <tr064.h>

//-------------------------------------------------------------------------------------
// Put your router settings here
//-------------------------------------------------------------------------------------
// Wifi network name (SSID)
const char* wifi_ssid = "NETZWERK"; 
// Wifi network password
const char* wifi_password = "Passwort";
// The username if you created an account, "admin" otherwise
const char* fuser = "USER";
// The password for the aforementioned account.
const char* fpass = "PasswortUser";
// IP address of your router. This should be "192.168.179.1" for most FRITZ!Boxes
const char* IP = "192.168.0.1";
// Port of the API of your router. This should be 49000 for all TR-064 devices.
const int PORT = 49000;
// -------------------------------------------------------------------------------------
 
// TR-064 connection
TR064 connection(PORT, IP, fuser, fpass);
 
int getWifiStatus() {
    String params[][2] = {{}};
    String req[][2] = {
        {"NewEnable", ""},  // WLAN aktiviert?
        {"NewStatus", ""},  // "Up"/"Down"
        {"NewSSID", ""}     // SSID (zur Kontrolle)
    };

    connection.action("urn:dslforum-org:service:WLANConfiguration:1", "GetInfo", params, 0, req, 3);
    
    String enabled = req[0][1];
    String status = req[1][1];
    String ssid = req[2][1];

    Serial.println("WLAN SSID: " + ssid);
    Serial.println("WLAN aktiviert: " + enabled);
    Serial.println("WLAN Status: " + status);

    return (enabled == "1" && status == "Up") ? 1 : 0;
}

int getGuestWifiStatus() {
    // Erstes TR-064-Request für Status, SSID etc.
    String params1[][2] = {{}};
    String req1[][2] = {
        {"NewEnable", ""},  // WLAN aktiviert?
        {"NewStatus", ""},  // "Up"/"Down"
        {"NewSSID", ""}     // SSID (zur Kontrolle)
    };

    connection.action("urn:dslforum-org:service:WLANConfiguration:3", "GetInfo", params1, 0, req1, 3);
    
    String enabled = req1[0][1];
    String status  = req1[1][1];
    String ssid    = req1[2][1];

    // Zweites TR-064-Request für das WLAN-Passwort
    String params2[][2] = {{}};
    String req2[][2] = {{"NewKeyPassphrase", ""}};

    connection.action("urn:dslforum-org:service:WLANConfiguration:3", "GetSecurityKeys", params2, 0, req2, 1);

    String passkey = req2[0][1];

    // Ausgabe
    Serial.println("Gast-WLAN SSID      : " + ssid);
    Serial.println("Gast-WLAN aktiviert : " + enabled);
    Serial.println("Gast-WLAN Status    : " + status);
    Serial.println("Gast-WLAN Passwort  : " + passkey);

    return (enabled == "1" && status == "Up") ? 1 : 0;
}

void toggleGuestWifi() {
    int status = getGuestWifiStatus();  // 1 = an, 0 = aus

    // Setze das Gegenteil des aktuellen Status
    String params[][2] = {
        {"NewEnable", status ? "0" : "1"}
    };

    bool success = connection.action(
        "urn:dslforum-org:service:WLANConfiguration:3",
        "SetEnable",
        params, 1,
        nullptr, 0
    );

    if (Serial) {
        Serial.printf("Gast-WLAN wurde %s.\n", status ? "ausgeschaltet" : "eingeschaltet");
    }

    if (!success && Serial) {
        Serial.println("Fehler beim Senden der WLAN Umschalt-Anfrage.");
    }
}

void ensureWIFIConnection() {
    if((WiFiMulti.run() != WL_CONNECTED)) {
        WiFiMulti.addAP(wifi_ssid, wifi_password);
        while ((WiFiMulti.run() != WL_CONNECTED)) {
            delay(100);
        }
    }
}

void setup() {
    Serial.begin(115200);
    Serial.println("boot...");
 
    // Connect to wifi
    ensureWIFIConnection();
    Serial.println("WIFI connected...");

    // Bei Problemen kann hier die Debug Ausgabe aktiviert werden
    //connection.debug_level = connection.DEBUG_VERBOSE;
    connection.init();

    // Request the number of (connected) Wifi-Devices
    int numDev = getWifiStatus();
    if(Serial) Serial.printf("WIFI has %d (connected) devices.\n", numDev);

    int numGuest = getGuestWifiStatus();
    if(Serial) Serial.printf("WIFI Gast has %d (connected) devices.\n", numGuest);
}
 
void loop() {
    toggleGuestWifi();
    delay(120000); // Alle 60 Sekunden ein/aus
    //delay(20);
}

